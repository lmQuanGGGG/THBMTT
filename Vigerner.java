/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Asus
 */
public class Vigerner extends javax.swing.JFrame {

    /**
     * Creates new form Vigerner
     */
    public Vigerner() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtKhoa = new javax.swing.JTextField();
        txtBanMa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btMaHoa = new javax.swing.JButton();
        btGiaiMa = new javax.swing.JButton();
        txtBanRo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtKhoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhoaActionPerformed(evt);
            }
        });
        txtKhoa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKhoaKeyTyped(evt);
            }
        });

        txtBanMa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Bản rõ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Khóa");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Bản mã");

        btMaHoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btMaHoa.setText("Mã hóa");
        btMaHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMaHoaActionPerformed(evt);
            }
        });

        btGiaiMa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btGiaiMa.setText("Giải mã");
        btGiaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGiaiMaActionPerformed(evt);
            }
        });

        txtBanRo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtBanRo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBanRoActionPerformed(evt);
            }
        });
        txtBanRo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBanRoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtBanRo)
                                .addComponent(txtKhoa)
                                .addComponent(txtBanMa, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                            .addContainerGap(46, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btMaHoa)
                            .addGap(41, 41, 41)
                            .addComponent(btGiaiMa)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(34, 34, 34)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtBanRo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(32, 32, 32)
                            .addComponent(jLabel3))
                        .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(39, 39, 39)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(txtBanMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(41, 41, 41)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btMaHoa)
                        .addComponent(btGiaiMa))
                    .addContainerGap(35, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btMaHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMaHoaActionPerformed
        // TODO add your handling code here:
        String keyy = txtKhoa.getText().toUpperCase(); 
        String banro = txtBanRo.getText().toUpperCase(); 
        StringBuilder banma = new StringBuilder();
        int key = keyy.length();
        for (int i = 0, j = 0; i < banro.length(); i++) {
            char c = banro.charAt(i);
            if (Character.isLetter(c)) {
            int shift = keyy.charAt(j % key) - 'A';
            char k = (char) (((c - 'A' + shift) % 26) + 'A');
            banma.append(k);
            j++; 
        }   else {
            banma.append(c); 
        }
    }
    txtBanMa.setText(banma.toString());
        //System.out.println(banma);
    }//GEN-LAST:event_btMaHoaActionPerformed

    private void btGiaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGiaiMaActionPerformed
        // TODO add your handling code here:
        String keyy = txtKhoa.getText().toUpperCase(); 
    String banma = txtBanMa.getText().toUpperCase();
    StringBuilder banro = new StringBuilder();
    
    int key  = keyy.length();
    for (int i = 0, j = 0; i < banma.length(); i++) {
        char c = banma.charAt(i);
        if (Character.isLetter(c)) {
            // Reverse shift using the keyword
            int shift = keyy.charAt(j % key) - 'A';
            char k = (char) (((c - 'A' - shift + 26) % 26) + 'A');
            banro.append(k);
            j++; 
        } else {
            banro.append(c); 
        }
    }
    txtBanRo.setText(banro.toString());
    }//GEN-LAST:event_btGiaiMaActionPerformed

    private void txtBanRoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBanRoActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtBanRoActionPerformed

    private void txtBanRoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBanRoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         if (!Character.isAlphabetic(evt.getKeyChar())) {
        // Nếu là số, chặn sự kiện (không cho nhập)
        evt.consume();
         }
    }//GEN-LAST:event_txtBanRoKeyTyped

    private void txtKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhoaActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtKhoaActionPerformed

    private void txtKhoaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhoaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         if (!Character.isAlphabetic(evt.getKeyChar())) {
        // Nếu là số, chặn sự kiện (không cho nhập)
        evt.consume();
         }
    }//GEN-LAST:event_txtKhoaKeyTyped
    

    // Hàm phá mã
    /*char phama(char q, int k){
return (char) (((Character.toUpperCase(q)- 'A')-(k%26)+26)%26 +'A');
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vigerner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vigerner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vigerner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vigerner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vigerner().setVisible(true);
                
            }
        });
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGiaiMa;
    private javax.swing.JButton btMaHoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtBanMa;
    private javax.swing.JTextField txtBanRo;
    private javax.swing.JTextField txtKhoa;
    // End of variables declaration//GEN-END:variables
}
